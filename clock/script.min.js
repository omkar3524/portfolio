function addEventListeners(){const e=document.querySelectorAll(".clock");e.forEach(e=>{e.addEventListener("click",()=>{startClock(e)})})}function startClock(e){removeActiveClass();const t=e.querySelector(".card");t.classList.add("active");const c=t.dataset.clock;allIntervals.forEach(e=>{clearInterval(e)});const l=setInterval(()=>{clocksTime[c]+=1;const e=new Date(1e3*clocksTime[c]).toISOString().slice(11,19);t.querySelector("span").innerHTML=e,storage[c].time=clocksTime[c]},1e3);allIntervals.push(l)}function pauseAll(){allIntervals.forEach(e=>{clearInterval(e),removeActiveClass()})}function removeActiveClass(){const e=document.querySelectorAll(".card");e.forEach(e=>{e.classList.remove("active")})}function removeAllClocks(){clockContainer.innerHTML="",clocksTime={},totalClocks=0,allIntervals=[],storage={},localStorage.removeItem("omkar-time-tracking")}function startRecording(){setInterval(()=>{localStorage.setItem("omkar-time-tracking",JSON.stringify(storage))},1e3)}let totalClocks=0,clocksTime={},allIntervals=[],labels={},storage={};const clockContainer=document.getElementById("clock-container"),addTaskBtn=document.getElementById("add-task-btn");addTaskBtn.addEventListener("click",()=>{const e=document.querySelector("input").value;if(!e)return void alert("Please enter label");const t=`clock-${totalClocks}`,c=0,l=document.createElement("div");l.classList.add("col-sm-12","col-md-6","col-lg-4","col-xl-3","mb-2","clock"),l.innerHTML=`\n        <div class="card" style="height: 150px; font-size: 40px;" data-clock="${t}">\n        <div class="card-body d-flex justify-content-center align-items-center ">\n            <span class="font-weight-bold">00:00:00</span>\n            <label for="">${e}</label>\n        </div>\n        </div>\n    `,clockContainer.appendChild(l),document.querySelector("input").value="",clocksTime[t]=c,totalClocks+=1,labels[t]=e,storage[t]={time:c,label:e},addEventListeners()});const clocks=JSON.parse(localStorage.getItem("omkar-time-tracking"));if(clocks){for(const e in clocks){const t=clocks[e].label,c=clocks[e].time,l=document.createElement("div");l.classList.add("col-sm-12","col-md-6","col-lg-4","col-xl-3","mb-2","clock"),l.innerHTML=`\n        <div class="card" style="height: 150px; font-size: 40px;" data-clock="${e}">\n        <div class="card-body d-flex justify-content-center align-items-center ">\n            <span class="font-weight-bold">${new Date(1e3*c).toISOString().slice(11,19)}</span>\n            <label for="">${t}</label>\n        </div>\n        </div>\n    `,clockContainer.appendChild(l),clocksTime[e]=c,totalClocks+=1,storage[e]={time:c,label:t}}addEventListeners()}startRecording();